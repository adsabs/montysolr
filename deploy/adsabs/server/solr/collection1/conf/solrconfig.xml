<?xml version="1.0" encoding="UTF-8" ?>

<config>

  <luceneMatchVersion>6.0</luceneMatchVersion>

  <lib dir="../lib" />

  <lib dir="../../../dist/" regex="apache-solr-cell-\d.*\.jar" />
  <lib dir="../../../contrib/extraction/lib" regex=".*\.jar" />

  <lib dir="../../../dist/" regex="apache-solr-clustering-\d.*\.jar" />
  <lib dir="../../../contrib/clustering/lib/" regex=".*\.jar" />

  <lib dir="../../../dist/" regex="apache-solr-langid-\d.*\.jar" />
  <lib dir="../../../contrib/langid/lib/" regex=".*\.jar" />

  <lib dir="../../../dist/" regex="apache-solr-velocity-\d.*\.jar" />
  <lib dir="../../../contrib/velocity/lib" regex=".*\.jar" />

  
  <dataDir>${solr.data.dir:}</dataDir>


  <directoryFactory name="DirectoryFactory" 
                    class="${solr.directoryFactory:solr.NRTCachingDirectoryFactory}"/> 


  <codecFactory class="solr.SchemaCodecFactory">
    <str name="compressionMode">BEST_COMPRESSION</str>
  </codecFactory>
  
  <schemaFactory class="ClassicIndexSchemaFactory"/>
   
  <indexConfig>
    
    <useCompoundFile>${solr.useCompoundFile:false}</useCompoundFile>

    <ramBufferSizeMB>${solr.ramBufferSize:1000}</ramBufferSizeMB>
    <maxBufferedDocs>${solr.maxBufferedDocs:50000}</maxBufferedDocs>


    
    <!-- When we run several instances sharing the same index, we must
         make sure that only one writer is modifying it; and other 
         instances are using 'single' lockType -->
         
    <lockType>${montysolr.locktype:native}</lockType>


    <deletionPolicy class="solr.SolrDeletionPolicy">
    
      <!-- The number of commit points to be kept
           This should be raised to 2 when there is a possibility of
           index corruption and disk space is available
      -->
        <str name="maxCommitsToKeep">${montysolr.maxCommitsToKeep:1}</str>

        <str name="maxOptimizedCommitsToKeep">0</str>

        <str name="maxCommitAge">1DAY</str>
     
    </deletionPolicy>
    

     <infoStream>true</infoStream>
  </indexConfig>


  <!-- JMX
       This example enables JMX if and only if an existing MBeanServer
       is found, use this if you want to configure JMX through JVM
       parameters. Remove this to disable exposing Solr configuration
       and statistics to JMX.
       For more details see http://wiki.apache.org/solr/SolrJmx
    -->
  <jmx />
  

  <!-- The default high-performance update handler -->
  <updateHandler class="solr.DirectUpdateHandler2"
                 enable="${montysolr.enable.write:true}">

    <updateLog>
      <str name="dir">${solr.ulog.dir:}</str>
    </updateLog>
    
     <autoCommit> 
       <maxDocs>${montysolr.autoCommit.maxDocs:40000}</maxDocs>
       <maxTime>${montysolr.autoCommit.maxTime:1800000}</maxTime> 
     </autoCommit>
	  
     <!-- disabled by default -->
     <autoSoftCommit> 
       <maxTime>${montysolr.autoSoftCommit.maxTime:-1}</maxTime> 
     </autoSoftCommit>


    <!-- trigger core reload of the read-only instance of the same datadir
    
         if this instance of solr is used for indexing, there may be another instance
         of solr (sharing the same datadir, on the same machine) which is doing only
         search. This command will trigger index re-open on the remote instance. However
         this is not good for near-real-time commits (but ADS is not using them yet,
         and likely not in the future)
         
    <listener event="postCommit" 
      class="solr.RunExecutableListener"
      enable="${montysolr.enable.curl:false}">
      <str name="exe">curl</str>
      <str name="dir">.</str>
      <bool name="wait">false</bool>
      <arr name="args"> <str>${montysolr.read.master:http://read-only-master-url}/solr/admin/cores?wt=json&amp;action=RELOAD&amp;core=collection1</str></arr>
    </listener>
    -->
    
  </updateHandler>
  
  <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
       Query section - these settings control query time things like caches
       ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
  <query>
    <maxBooleanClauses>1024</maxBooleanClauses>
    
    <slowQueryThresholdMillis>1000</slowQueryThresholdMillis>

    <filterCache class="solr.FastLRUCache"
                 size="${solr.filterCache.size:512}"
                 initialSize="${solr.filterCache.initialSize:512}"
                 autowarmCount="${solr.filterCache.autowarmCount:128}"
                 />

    <queryResultCache class="solr.LRUCache"
                     size="${solr.queryResultCache.size:512}"
                     initialSize="${solr.queryResultCache.initialSize:512}"
                     autowarmCount="${solr.queryResultCache.autowarmCount:128}"
                     maxRamMB="${solr.queryResultCache.maxRamMB:128}"
                     />
   
    <documentCache class="solr.LRUCache"
                   size="${solr.documentCache.size:512}"
                   initialSize="${solr.documentCache.initialSize:512}"
                   autowarmCount="${solr.documentCache.autowarmCount:128}"
                   />
    
    <!-- 
    This cache is built to answer 2nd order queries based on citation
    relationships. If you use 'reuseCache', then make sure that the
    searchers are warmed in the following sequence:
    
      1. query that sorts data by bibcode
      2. warm_cache()
      
    You can disable the cache/and cache-warming/ by setting the values
    to zero
     -->
    <cache name="citations-cache"
              class="solr.CitationLRUCache"
              size="${solr.citationCache.size:512}"
              initialSize="${solr.citationCache.initialSize:512}"
              autowarmCount="${solr.citationCache.autowarmCount:128}"
              regenerator="solr.CitationLRUCache$SimpleRegenerator"
              identifierFields="bibcode:sorted,alternate_bibcode"
              citationFields="citation"
              reuseCache="${montysolr.reuseCache:true}"
              dumpCache="${montysolr.enable.write:true}"
              loadDumpedCache="${montysolr.load.citation_cache:true}"
              />
              
    <enableLazyFieldLoading>true</enableLazyFieldLoading>

    <useFilterForSortedQuery>true</useFilterForSortedQuery>

    <queryResultWindowSize>${solr.queryResultWindowSize:25}</queryResultWindowSize>

    <queryResultMaxDocsCached>${solr.queryResultMaxDocsCached:200}</queryResultMaxDocsCached>

    <listener event="newSearcher" 
      class="org.apache.solr.handler.ReplicationEventListener"
      enable="${montysolr.coordinate:true}">
      <str name="endpoint">/replicoordinator</str>
    </listener>
    
    <!-- set montysolr.warmSeacher to 'false' if you want to just replicate/build
         index and you don't care to have citation cache (it speeds up indexing) -->
    <listener event="newSearcher" 
      class="solr.QuerySenderListener"
      enable="${montysolr.warmSearcher:true}">
      <arr name="queries">
        <!-- It is important to warm the searcher with ordering first, because
             the citations-cache can reuse the cache
         -->
        <lst>
          <str name="q">new searcher warming</str>
          <str name="sort">bibcode desc</str>
        </lst>
        <lst><str name="q">author:&quot;John Doe&quot;</str></lst>
        <lst>
          <str name="q">(black holes thorne) AND database:&quot;astronomy&quot;</str>
          <str name="sort">score desc,bibcode desc</str>
          <str name="facet">true</str>
          <str name="f.author_facet_hier.facet.limit">200</str>
          <str name="f.bibstem_facet.facet.limit">100</str>
          <str name="f.database.facet.limit">-1</str>
          <str name="f.ack.hl.snippets">4</str>
          <str name="f.keyword_facet.facet.mincount">1</str>
          <str name="hl">true</str>
          <str name="f.grant_facet_hier.facet.prefix">0/</str>
          <str name="f.abstract.hl.snippets">4</str>
          <str name="facet.field">bibstem_facet</str>
          <str name="facet.field">author_facet_hier</str>
          <str name="facet.field">property</str>
          <str name="facet.field">keyword_facet</str>
          <str name="facet.field">year</str>
          <str name="facet.field">bibgroup_facet</str>
          <str name="facet.field">data_facet</str>
          <str name="facet.field">vizier_facet</str>
          <str name="facet.field">grant_facet_hier</str>
          <str name="facet.field">database</str>
          <str name="facet.field">simbad_object_facet_hier</str>
          <str name="facet.field">aff_facet_hier</str>
          <str name="facet.field">doctype_facet_hier</str>
          <str name="facet.field">first_author_facet_hier</str>
          <str name="facet.field">ned_object_facet_hier</str>

          <str name="f.full.hl.snippets">4</str>
          <str name="hl.requireFieldMatch">true</str>
        </lst>
      </arr>
    </listener>
    <listener event="firstSearcher" 
              class="solr.QuerySenderListener"
              enable="${montysolr.warmSearcher:true}">
      <arr name="queries">
        <!-- It is important to warm the searcher with ordering first, because
             the citations-cache can reuse the cache
         -->
        <lst>
          <str name="q">new searcher warming</str>
          <str name="sort">bibcode desc</str>
        </lst>
        <lst><str name="q">warm_cache(new searcher warming)</str></lst>
        <lst>
          <str name="q">(black holes thorne) AND database:&quot;astronomy&quot;</str>
          <str name="sort">score desc,bibcode desc</str>
          <str name="facet">true</str>
          <str name="f.author_facet_hier.facet.limit">200</str>
          <str name="f.bibstem_facet.facet.limit">100</str>
          <str name="f.database.facet.limit">-1</str>
          <str name="f.ack.hl.snippets">4</str>
          <str name="f.keyword_facet.facet.mincount">1</str>
          <str name="hl">true</str>
          <str name="f.grant_facet_hier.facet.prefix">0/</str>
          <str name="f.abstract.hl.snippets">4</str>
          <str name="facet.field">bibstem_facet</str>
          <str name="facet.field">author_facet_hier</str>
          <str name="facet.field">property</str>
          <str name="facet.field">keyword_facet</str>
          <str name="facet.field">year</str>
          <str name="facet.field">bibgroup_facet</str>
          <str name="facet.field">data_facet</str>
          <str name="facet.field">vizier_facet</str>
          <str name="facet.field">grant_facet_hier</str>
          <str name="facet.field">database</str>
          <str name="facet.field">simbad_object_facet_hier</str>
          <str name="facet.field">aff_facet_hier</str>
          <str name="facet.field">doctype_facet_hier</str>
          <str name="facet.field">first_author_facet_hier</str>
          <str name="facet.field">ned_object_facet_hier</str>

          <str name="f.full.hl.snippets">4</str>
          <str name="hl.requireFieldMatch">true</str>
        </lst>
      </arr>
    </listener>

    <!-- Use Cold Searcher

         If a search request comes in and there is no current
         registered searcher, then immediately register the still
         warming searcher and use it.  If "false" then all requests
         will block until the first searcher is done warming.
         
         RCA: by setting this value to true, we risk being hit 
         by several 2nd order queries,which start to build cache
         simultaneously. That is a very bad situation.
      -->
    <useColdSearcher>false</useColdSearcher>

    <maxWarmingSearchers>2</maxWarmingSearchers>

  </query>


  <requestDispatcher handleSelect="false" >
    <requestParsers enableRemoteStreaming="true" 
                    multipartUploadLimitInKB="2048000"
                    formdataUploadLimitInKB="2048000"
                    addHttpRequestToContext="false" />

       <!-- if montysolr.debug=true, then the responses are not cached -->
       <httpCaching lastModifiedFrom="openTime"
                    etagSeed="Solr"
                    never304="${montysolr.debug:false}">
         <cacheControl>max-age=600, public</cacheControl> 
       </httpCaching>
       
  </requestDispatcher>

  <requestHandler name="/select" class="solr.SearchHandler">
     <lst name="defaults">
       <str name="wt">json</str>
       <int name="rows">10</int>
       <str name="fl">id recid title abstract author bibcode identifier volume page bibstem doctype pubdate pub pub_raw citation_count read_count esources</str>
       <!-- 
       ADSLABS:12/12: this can be overrided by url params. 
       But unfielded search will not work if you use "df" parameter!
       
       ADS2: 30-09-13
       Make sure these defaults are set also in other public
       query handlers (e.g. tvrh - used by the word cloud)
       
       April 4, 2018
       Modified qf
       original: first_author^3.0 author^2 title^1.4 abstract^1.3 keyword^1.4 keyword_norm^1.4 all body^0.1 year
       new: first_author^5 author^2 title^1.5 abstract^1.3 identifier^1 bibstem^1 year^2
       
       August 28, 2019
       Modified qf:
       old: first_author^5 author^2 title^1.5 abstract^1.3 identifier^1 bibstem^1 year^2
       new: first_author^0.9 author^0.85 year^0.8 title^0.8 abstract^0.7 identifier^0.8 bibstem^0.8 keyword^0.8
              
        -->
       <str name="qf">first_author^0.9 author^0.85 year^0.8 title^0.8 abstract^0.7 identifier^0.8 bibstem^0.8 keyword^0.8</str>
       
       <str name="defType">aqp</str>
       <str name="aqp.unfielded.tokens.strategy">disjuncts</str>
       <str name="aqp.unfielded.tokens.new.type">simple</str>
       <str name="aqp.unfielded.ignore.fields">entdate pubdate year</str>
       <str name="aqp.unfielded.tokens.function.name">edismax_combined_aqp</str>
       <str name="useFastVectorHighlighter">true</str>
       <str name="aqp.classic_scoring.modifier">0.5</str>
       <str name="aqp.constant_scoring">first_author^14 author^13 year^10 bibstem^10</str>
       <str name="aqp.multiphrase.keep_one">SYNONYM</str>
       <str name="aqp.multiphrase.keep_one.ignore.fields">aff_raw,aff_id,institution</str>
       <str name="aqp.unfielded.max.uppercase.tokens">2</str>
       <str name="q.op">AND</str>
       
     </lst>
     <lst name="invariants">
       <str name="echoParams">explicit</str>
       <str name="aqp.allow.leading_wildcard">false</str>
       <str name="aqp.maxAbsolutePhraseLength">500</str>
     </lst>
     <arr name="last-components">
      <str>wordcloud</str>
     </arr>
    </requestHandler>

  <!-- this allows to send query data in content-stream -->
  <requestHandler name="/bigquery" class="solr.BigQuerySearchHandler">
    <lst name="defaults">
       <str name="echoParams">explicit</str>
       <int name="rows">10</int>
       <str name="qf">first_author^0.9 author^0.85 year^0.8 title^0.8 abstract^0.7 identifier^0.8 bibstem^0.8 keyword^0.8</str>
       <str name="defType">aqp</str>
       <str name="aqp.unfielded.tokens.strategy">disjuncts</str>
       <str name="aqp.unfielded.tokens.new.type">simple</str>
       <str name="aqp.unfielded.ignore.fields">entdate pubdate year</str>
       <str name="aqp.unfielded.tokens.function.name">edismax_combined_aqp</str>
       <str name="useFastVectorHighlighter">true</str>
       <str name="aqp.classic_scoring.modifier">0.5</str>
       <str name="aqp.constant_scoring">first_author^14 author^13 year^10 bibstem^10</str>
       <str name="aqp.multiphrase.keep_one">SYNONYM</str>
       <str name="aqp.multiphrase.keep_one.ignore.fields">aff_raw,aff_id,institution</str>
       <str name="aqp.unfielded.max.uppercase.tokens">2</str>
       <str name="q.op">AND</str>
       <str name="df">unfielded_search</str>
     </lst>
    <lst name="invariants">
       <str name="echoParams">explicit</str>
       <str name="aqp.allow.leading_wildcard">false</str>
    </lst>
    <arr name="last-components">
      <str>tvComponent</str>
    </arr>
  </requestHandler>
  
  <!-- request handler for generating list of similar articles -->
	<requestHandler name="/mlt" class="solr.MoreLikeThisHandler">
		<lst name="defaults">
		<str name="mlt.fl">title,abstract</str>
		<str name="mlt.qf">title^1.4 abstract^1.3</str>
		<str name="mlt.mintf">1</str>
		<str name="mlt.mindf">1</str>
		<str name="mlt.match.include">false</str>
		
		<str name="q.op">AND</str>
        <str name="df">unfielded_search</str>
		</lst>
		<lst name="invariants">
	       <str name="echoParams">explicit</str>
	       <str name="aqp.allow.leading_wildcard">false</str>
	     </lst>
	</requestHandler> 

  <!-- A request handler that returns indented JSON by default -->
  <requestHandler name="/query" class="solr.SearchHandler">
     <lst name="defaults">
       <str name="echoParams">explicit</str>
       <int name="rows">10</int>
       <str name="wt">json</str>
       <str name="indent">true</str>
       <!-- 
       ADSLABS:12/12: this can be overrided by url params. 
       But unfielded search will not work if you use "df" parameter!
       
       ADS2: 30-09-13
       Make sure these defaults are set also in other public
       query handlers (e.g. tvrh - used by the word cloud)
        -->
       <str name="qf">first_author^0.9 author^0.85 year^0.8 title^0.8 abstract^0.7 identifier^0.8 bibstem^0.8 keyword^0.8</str>
       <str name="defType">aqp</str>
       <str name="aqp.unfielded.tokens.strategy">disjuncts</str>
       <str name="aqp.unfielded.tokens.new.type">simple</str>
       <str name="aqp.unfielded.ignore.fields">entdate pubdate year</str>
       <str name="aqp.unfielded.tokens.function.name">edismax_combined_aqp</str>
       <str name="useFastVectorHighlighter">true</str>
       <str name="aqp.allow.leading_wildcard">true</str>
       <str name="aqp.unfielded.max.uppercase.tokens">2</str>
       <str name="q.op">AND</str>
       <str name="df">unfielded_search</str>
     </lst>
     <lst name="invariants">
       <str name="echoParams">explicit</str>
     </lst>
  </requestHandler>


  <!-- realtime get handler, guaranteed to return the latest stored fields of
       any document, without the need to commit or open a new searcher.  The
       current implementation relies on the updateLog feature being enabled.

       ** WARNING **
       Do NOT disable the realtime get handler at /get if you are using
       SolrCloud otherwise any leader election will cause a full sync in ALL
       replicas for the shard in question. Similarly, a replica recovery will
       also always fetch the complete index from the leader because a partial
       sync will not be possible in the absence of this handler.
  -->
  <requestHandler name="/get" class="solr.RealTimeGetHandler">
     <lst name="defaults">
       <str name="omitHeader">true</str>
     </lst>
  </requestHandler>

 

  <requestHandler name="/update" 
                  class="solr.UpdateRequestHandler"
                  enable="${montysolr.enable.write:true}">
    <!-- See below for information on defining 
         updateRequestProcessorChains that can be used by name 
         on each Update Request
      -->
    <!--
       <lst name="defaults">
         <str name="update.chain">dedupe</str>
       </lst>
       -->
  </requestHandler>
  
  <!-- for back compat with clients using /update/json and /update/csv -->  
  <requestHandler name="/update/json" 
        class="solr.UpdateRequestHandler"
        enable="${montysolr.enable.write:true}">
        <lst name="defaults">
         <str name="stream.contentType">application/json</str>
       </lst>
  </requestHandler>
  <requestHandler name="/update/csv" 
        class="solr.UpdateRequestHandler"
        enable="${montysolr.enable.write:true}">
        <lst name="defaults">
         <str name="stream.contentType">application/csv</str>
       </lst>
  </requestHandler>
  

  <requestHandler name="/analysis/field" 
                  startup="lazy"
                  class="solr.FieldAnalysisRequestHandler" />


  <requestHandler name="/analysis/document" 
                  class="solr.DocumentAnalysisRequestHandler" 
                  startup="lazy" />

  <requestHandler name="/admin/ping" class="solr.PingRequestHandler">
    <str name="healthcheckFile">server-enabled.txt</str>
    <lst name="defaults">
      <str name="q">*:*</str>
      <str name="wt">json</str>
    </lst>
  </requestHandler>
  
  <requestHandler name="/admin/luke" class="solr.admin.LukeRequestHandler" />

  <requestHandler name="/debug/dump" class="solr.DumpRequestHandler" >
    <lst name="defaults">
     <str name="echoParams">explicit</str> 
     <str name="echoHandler">true</str>
    </lst>
  </requestHandler>
  
  <requestHandler name="/replication" class="solr.ReplicationHandler" startup="lazy">
    <lst name="master">
	    <str name="replicateAfter">commit</str>
	    <str name="confFiles">${montysolr.replication.confFiles:citation_cache.gen,citation_cache.dict,citation_cache.refs,citation_cache.cit,ads_text_multi.synonyms,ads_text_simple.synonyms,ads_text.kill,ads_text.kill_sens,author_curated.synonyms,author_generated.translit,stopwords.txt}</str>
    </lst>
  </requestHandler>
  
  <requestHandler name="/replicoordinator" class="solr.ReplicationCoordinatorHandler" >
    <str name="maxDelay">${montysolr.stagger.maxDelay:900}</str>
    <str name="numInstances">${montysolr.stagger.numInstances:6}</str>
    <str name="numTop">${montysolr.stagger.numTop:2}</str>
    <str name="numBottom">${montysolr.stagger.numBottom:1}</str>
  </requestHandler> 

  <!--  disabled SpellCheck see original solrconfig.xml or http://wiki.apache.org/solr/SpellCheckComponent -->


  <searchComponent name="tvComponent" class="solr.TermVectorComponent"/>
  
  <requestHandler name="/tvrh" class="solr.SearchHandler" startup="lazy">
    <lst name="defaults">
       <str name="echoParams">explicit</str>
       <int name="rows">10</int>
       <str name="qf">first_author^5 author^2 title^1.5 abstract^1.3 identifier^1 bibstem^1 year^2</str>
       <str name="defType">aqp</str>
       <str name="aqp.unfielded.tokens.strategy">disjuncts</str>
       <str name="aqp.unfielded.tokens.new.type">simple</str>
       <str name="aqp.unfielded.tokens.function.name">edismax_combined_aqp</str>
     </lst>
    <arr name="last-components">
      <str>tvComponent</str>
    </arr>
  </requestHandler>

  <!--  to activate clustering see original solrconfig.xml or http://wiki.apache.org/solr/ClusteringComponent -->
  
  <searchComponent name="terms" class="solr.TermsComponent"/>
  <requestHandler name="/terms" class="solr.SearchHandler" startup="lazy">
     <lst name="defaults">
      <bool name="terms">true</bool>
    </lst>
    <lst name="invariants">
      <int name="terms.mincount">1</int>
    </lst>  
    <arr name="components">
      <str>terms</str>
    </arr>
  </requestHandler>



  <searchComponent class="solr.HighlightComponent" name="highlight">
    <highlighting>
      <!-- Configure the standard fragmenter -->
      <!-- This could most likely be commented out in the "default" case -->
      <fragmenter name="gap" 
                  default="true"
                  class="solr.highlight.GapFragmenter">
        <lst name="defaults">
          <int name="hl.fragsize">100</int>
        </lst>
      </fragmenter>

      <!-- A regular-expression-based fragmenter 
           (for sentence extraction) 
        -->
      <fragmenter name="regex" 
                  class="solr.highlight.RegexFragmenter">
        <lst name="defaults">
          <!-- slightly smaller fragsizes work better because of slop -->
          <int name="hl.fragsize">70</int>
          <!-- allow 50% slop on fragment sizes -->
          <float name="hl.regex.slop">0.5</float>
          <!-- a basic sentence pattern -->
          <str name="hl.regex.pattern">[-\w ,/\n\&quot;&apos;]{20,200}</str>
        </lst>
      </fragmenter>

      <!-- Configure the standard formatter -->
      <formatter name="html" 
                 default="true"
                 class="solr.highlight.HtmlFormatter">
        <lst name="defaults">
          <str name="hl.simple.pre"><![CDATA[<em>]]></str>
          <str name="hl.simple.post"><![CDATA[</em>]]></str>
        </lst>
      </formatter>

      <!-- Configure the standard encoder -->
      <!--ADSLABS:06/2012 -->
      <encoder name="html"
               default="true" 
               class="solr.highlight.HtmlEncoder" />

      <!-- Configure the standard fragListBuilder -->
      <fragListBuilder name="simple" 
                       class="solr.highlight.SimpleFragListBuilder"/>
      
      <!-- Configure the single fragListBuilder -->
      <fragListBuilder name="single" 
                       class="solr.highlight.SingleFragListBuilder"/>
      
      <!-- Configure the weighted fragListBuilder -->
      <fragListBuilder name="weighted" 
                       default="true"
                       class="solr.highlight.WeightedFragListBuilder"/>
      
      <!-- default tag FragmentsBuilder -->
      <fragmentsBuilder name="default" 
                        default="true"
                        class="solr.highlight.ScoreOrderFragmentsBuilder">
        <!-- 
        <lst name="defaults">
          <str name="hl.multiValuedSeparatorChar">/</str>
        </lst>
        -->
      </fragmentsBuilder>

      <!-- multi-colored tag FragmentsBuilder -->
      <fragmentsBuilder name="colored" 
                        class="solr.highlight.ScoreOrderFragmentsBuilder">
        <lst name="defaults">
          <str name="hl.tag.pre"><![CDATA[
               <b style="background:yellow">,<b style="background:lawgreen">,
               <b style="background:aquamarine">,<b style="background:magenta">,
               <b style="background:palegreen">,<b style="background:coral">,
               <b style="background:wheat">,<b style="background:khaki">,
               <b style="background:lime">,<b style="background:deepskyblue">]]></str>
          <str name="hl.tag.post"><![CDATA[</b>]]></str>
        </lst>
      </fragmentsBuilder>
      
      <boundaryScanner name="default" 
                       default="true"
                       class="solr.highlight.SimpleBoundaryScanner">
        <lst name="defaults">
          <str name="hl.bs.maxScan">10</str>
          <str name="hl.bs.chars">.,!? &#9;&#10;&#13;</str>
        </lst>
      </boundaryScanner>
      
      <boundaryScanner name="breakIterator" 
                       class="solr.highlight.BreakIteratorBoundaryScanner">
        <lst name="defaults">
          <!-- type should be one of CHARACTER, WORD(default), LINE and SENTENCE -->
          <str name="hl.bs.type">WORD</str>
          <!-- language and country are used when constructing Locale object.  -->
          <!-- And the Locale object will be used when getting instance of BreakIterator -->
          <str name="hl.bs.language">en</str>
          <str name="hl.bs.country">US</str>
        </lst>
      </boundaryScanner>
    </highlighting>
  </searchComponent>

 
    <updateRequestProcessorChain name="blanketyblank">
        <processor class="solr.RemoveBlankFieldUpdateProcessorFactory"/>
        <processor class="solr.LogUpdateProcessorFactory" />
        <processor class="solr.RunUpdateProcessorFactory" />
    </updateRequestProcessorChain>
 
  <searchComponent name="wordcloud" class="solr.WordCloudComponent"/>

  <queryResponseWriter name="json" class="solr.JSONResponseWriter" />
    
  <queryResponseWriter name="xslt" class="solr.XSLTResponseWriter">
    <int name="xsltCacheLifetimeSeconds">5</int>
  </queryResponseWriter>

  <admin>
    <defaultQuery>*:*</defaultQuery>
  </admin>

  
    <!-- 
    =====================================================================
     				MontySolr
    =====================================================================
    -->
  
  <requestHandler name="/ads-config" class="solr.AdsConfigHandler" default="false">
     <lst name="queryParser">
      <str name="defaultField">unfielded_search</str>
      <str name="defaultOperator">AND</str>
      <str name="fieldMap">arxiv identifier;collection database</str>
      <str name="fieldMapPostAnalysis">entdate entry_date;pubdate date;author_nosyn author_notrans author_nosyn_notrans author</str>
      <str name="unfieldedSearch">author^1.5 title^1.4 abstract^1.3</str>
    </lst>
  </requestHandler>
  
  <!-- 
       An exact copy (needs to be kept in sync!) with the 'aqp' parser
       below; this is the only way to force solr to use 'aqp' as a default
       parser for everything (including filter queries).  
    -->
  <queryParser name="lucene" class="solr.AdsQParserPlugin">
    <lst name="defaults">
       <str name="df">all</str>
       <lst name="virtual-fields">
          <str name="full">title^2 abstract^2 body keyword ack</str>
          <str name="abs">title abstract keyword</str>
          <str name="orcid">orcid_pub orcid_user^0.9 orcid_other^0.8</str>
          <str name="affil">aff_abbrev aff_canonical aff_id institution^2 aff^0.5</str>
          <str name="inst">aff_id^2 institution</str>
       </lst>
       <str name="aqp.unfieldedSearchField">unfielded_search</str>
       
       <str name="aqp.defaultOperator">AND</str>
       <str name="aqp.fieldMap">arxiv identifier;collection database</str>
       <str name="aqp.fieldMapPostAnalysis">entdate entry_date;pubdate date;author_nosyn author_notrans author_nosyn_notrans author;title_nosyn title;alternate_title_nosyn alternate_title;abstract_nosyn abstract;all_nosyn all;full_nosyn full;body_nosyn body;ack_nosyn ack;keyword_nosyn keyword</str>
       <str name="aqp.unfieldedSearch">author^1.5 title^1.4 abstract^1.3</str>
       <str name="aqp.dateFormat">yyyy-MM-dd'T'HH:mm:ss</str>
       <str name="aqp.timestampFormat">yyyy-MM-dd'T'HH:mm:ss.SSS</str>
       <str name="aqp.dateFields">entry_date,date</str>
       <str name="aqp.timestampFields">indexstamp,update_timestamp,entry_date,metadata_ctime,metadata_mtime,fulltext_ctime,fulltext_mtime,nonbib_ctime,nonbib_mtime,metrics_ctime,metrics_mtime,orcid_ctime,orcid_mtime</str>
       <str name="aqp.floatFields">cite_read_boost,citation_count_norm</str>
       <str name="aqp.intFields">recid,pubdate_sort,citation_count,classic_factor,simbid,read_count,author_count,page_count,data_count</str>
       <str name="aqp.authorFields">author,first_author,book_author,editor</str>
       <str name="aqp.humanized.dates">pubdate:date,entdate:entry_date:timestamp</str>
       <str name="aqp.force.fuzzy.phrases">author,first_author,book_author,editor</str>
    </lst>
  </queryParser>
  
  <queryParser name="aqp" class="solr.AdsQParserPlugin">
    <lst name="defaults">
      <!--
       Virtual fields will be translated into real-fields
       Make sure you are never referencing virtual field
       from inside another virtual field
      -->
       <str name="df">all</str>
       <lst name="virtual-fields">
          <str name="full">title^2 abstract^2 body keyword ack</str>
          <str name="abs">title abstract keyword</str>
          <str name="orcid">orcid_pub orcid_user^0.9 orcid_other^0.8</str>
          <str name="affil">aff_abbrev aff_canonical aff_id institution^2 aff^0.5</str>
          <str name="inst">aff_id^2 institution</str>
       </lst>
       <str name="aqp.unfieldedSearchField">unfielded_search</str>
       <str name="aqp.defaultField">unfielded_search</str>
       <str name="aqp.defaultOperator">AND</str>
       <str name="aqp.fieldMap">arxiv identifier;collection database</str>
       <str name="aqp.fieldMapPostAnalysis">entdate entry_date;pubdate date;author_nosyn author_notrans author_nosyn_notrans author;title_nosyn title;alternate_title_nosyn alternate_title;abstract_nosyn abstract;all_nosyn all;full_nosyn full;body_nosyn body;ack_nosyn ack;keyword_nosyn keyword</str>
       <str name="aqp.unfieldedSearch">author^1.5 title^1.4 abstract^1.3</str>
       <str name="aqp.dateFormat">yyyy-MM-dd'T'HH:mm:ss</str>
       <str name="aqp.timestampFormat">yyyy-MM-dd'T'HH:mm:ss.SSS</str>
       <str name="aqp.dateFields">entry_date,date</str>
       <str name="aqp.timestampFields">indexstamp,update_timestamp,entry_date,metadata_ctime,metadata_mtime,fulltext_ctime,fulltext_mtime,nonbib_ctime,nonbib_mtime,metrics_ctime,metrics_mtime,orcid_ctime,orcid_mtime</str>
       <str name="aqp.floatFields">cite_read_boost,citation_count_norm</str>
       <str name="aqp.intFields">recid,pubdate_sort,citation_count,classic_factor,simbid,read_count,author_count,page_count,data_count</str>
       <str name="aqp.authorFields">author,first_author,book_author,editor</str>
       <str name="aqp.humanized.dates">pubdate:date,entdate:entry_date:timestamp</str>
       <str name="aqp.force.fuzzy.phrases">author,first_author,book_author,editor</str>
    </lst>
  </queryParser>
  
  <!-- ADS own modified breed of edismax (this one calls aqp for individual
       queries) because we are MUCH better in handling them -->
  <queryParser name="adismax" class="solr.AqpExtendedDismaxQParserPlugin">
    <lst name="defaults">
        <str name="df">all</str>
        <bool name="sow">true</bool>
    </lst>
  </queryParser>
    
  
  
  <requestHandler name="/batch" 
                  class="org.apache.solr.handler.batch.BatchHandler"
                  enable="${montysolr.enable.write:true}" 
                  default="false">
    <lst name="defaults">
        <str name="allowed">.*</str>
        <bool name="asynchronous">true</bool>
        <str name="workdir">${montysolr.batch.workdir:batch-handler}</str>
    </lst>
    <lst name="providers">
      <str name="dump-authors">org.apache.solr.handler.batch.BatchProviderDumpAuthorNames</str>
      <str name="dump-index">org.apache.solr.handler.batch.BatchProviderDumpIndexFields</str>
      <str name="dump-index-use-bibcodes">org.apache.solr.handler.batch.BatchProviderDumpBibcodes</str>
      <str name="dump-freqs">org.apache.solr.handler.batch.BatchProviderDumpTermFreqs</str>
      <str name="dump-docs">org.apache.solr.handler.batch.BatchProviderDumpIndex</str>
      <str name="dump-docs-by-query">org.apache.solr.handler.batch.BatchProviderDumpDocsByQuery</str>
      <str name="dump-citation-index">org.apache.solr.handler.batch.BatchProviderDumpCitationCache</str>
      <str name="find-freq-phrases">org.apache.solr.handler.batch.BatchProviderFindWordGroups</str>
    </lst>
  </requestHandler>
  
  <requestHandler name="/perf" class="perf.CreatePerformanceQueriesHandler">
  </requestHandler>
  
  <transformer name="citations" class="org.apache.solr.response.transform.CitationsTransformerFactory" >
    <str name="cache-name">citations-cache</str>
    <str name="resolution-field">bibcode</str>
  </transformer>

  <transformer name="fields" class="org.apache.solr.response.transform.FieldTransformerFactory" >
  </transformer>  
  
  <queryParser name="bitset" class="solr.search.BitSetQParserPlugin">
    <lst name="defaults">
      <str name="cache-mapping">bibcode:citations-cache</str>
      <str name="allowed-fields">bibcode,recid</str>
    </lst>
  </queryParser>
  
  <!-- to parse the query and get the syntactic tree (useful for BB) -->
  <searchComponent name="qtree" class="org.apache.solr.handler.component.AqpQueryTree" />
  <requestHandler name="/qtree" class="solr.StandardRequestHandler">
    <lst name="defaults">
       <lst name="virtual-fields">
          <str name="full">title^2 abstract^2 body keyword ack</str>
          <str name="abs">title abstract keyword</str>
          <str name="orcid">orcid_pub orcid_user^0.9 orcid_other^0.8</str>
          <str name="aff">aff_abbrev aff_canonical aff_id institution^2 aff_raw^0.5</str>
          <str name="inst">aff_id^2 institution</str>
       </lst>
       <str name="aqp.unfieldedSearchField">unfielded_search</str>
       <str name="aqp.defaultField">unfielded_search</str>
       <str name="aqp.defaultOperator">AND</str>
       <str name="aqp.fieldMap">arxiv identifier;collection database</str>
       <str name="aqp.fieldMapPostAnalysis">entdate entry_date;pubdate date;author_nosyn author_notrans author_nosyn_notrans author;title_nosyn title;alternate_title_nosyn alternate_title;abstract_nosyn abstract;all_nosyn all;full_nosyn full;body_nosyn body;ack_nosyn ack;keyword_nosyn keyword</str>
       <str name="aqp.unfieldedSearch">author^1.5 title^1.4 abstract^1.3</str>
       <str name="aqp.dateFormat">yyyy-MM-dd'T'HH:mm:ss</str>
       <str name="aqp.timestampFormat">yyyy-MM-dd'T'HH:mm:ss.SSS</str>
       <str name="aqp.dateFields">entry_date,date</str>
       <str name="aqp.timestampFields">indexstamp,update_timestamp,entry_date,metadata_ctime,metadata_mtime,fulltext_ctime,fulltext_mtime,nonbib_ctime,nonbib_mtime,metrics_ctime,metrics_mtime,orcid_ctime,orcid_mtime</str>
       <str name="aqp.floatFields">cite_read_boost,citation_count_norm</str>
       <str name="aqp.intFields">recid,pubdate_sort,citation_count,classic_factor,simbid,read_count,author_count,page_count,data_count</str>
       <str name="aqp.authorFields">author,first_author,book_author,editor</str>
       <str name="aqp.humanized.dates">pubdate:date,entdate:entry_date:timestamp</str>
       <str name="aqp.force.fuzzy.phrases">author,first_author,book_author,editor</str>
    </lst>
    <arr name="components">
      <str>qtree</str>
    </arr>
  </requestHandler>
  
</config>